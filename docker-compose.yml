version: '3.7'

services:
  app:
    image: registry.gitlab.tpwd.de/tpwd/bb-navi/datahub-tmb-importer
    depends_on: [db]
    environment:
      RAILS_ENV: production
      RAILS_LOG_TO_STDOUT: 1
    networks:
      public:
      datahub-tmb-database-postgres:
    configs:
      - source: bbnavi-tmb-importer-master-key
        target: /app/config/master.key
      - source: bbnavi-tmb-importer-production-key
        target: /app/config/credentials/production.key
    volumes:
      - unicorn:/unicorn
      - assets:/assets
      - settings:/app/config/settings
    deploy:
      labels:
        traefik.enable: "true"
        traefik.port: 80
        traefik.docker.network: public
        traefik.main.frontend.rule: Host:tmb.datahub.bbnavi.de
        traefik.main.frontend.passHostHeader: "true"
        traefik.main.frontend.redirect.entryPoint: https
        traefik.api.frontend.rule: Host:tmb.datahub.bbnavi.de
        traefik.api.frontend.passHostHeader: "true"
        traefik.api.frontend.redirect.entryPoint: https
      restart_policy:
        condition: on-failure

  db:
    image: 'postgres:10.3-alpine'
    environment:
      POSTGRES_USER: bbnavitmbv
      POSTGRES_PASSWORT: bbnavitmbv
      POSTGRES_DB: bbnavitmbv
    networks:
      datahub-tmb-database-postgres:
        aliases:
          - datahub-tmb-database-postgres
    volumes:
      - datahub_tmb_db:/var/lib/postgresql/data
    deploy:
      restart_policy:
        condition: on-failure

  cron:
    image: registry.gitlab.tpwd.de/tpwd/bb-navi/datahub-tmb-importer
    environment:
      RAILS_ENV: production
      RAILS_LOG_TO_STDOUT: 1
    entrypoint: sh
    command: bin/start-cron.sh
    depends_on: [db]
    configs:
      - source: bbnavi-tmb-importer-master-key
        target: /app/config/master.key
      - source: bbnavi-tmb-importer-production-key
        target: /app/config/credentials/production.key
    volumes:
      - settings:/app/config/settings
    networks:
      datahub-tmb-database-postgres:

volumes:
  datahub_tmb_db:
    external: true
  unicorn:
  assets:
  settings:

configs:
  smart-village-app-converter-xml2json-nginx-conf:
    external: true
  smart-village-app-converter-tmb-database-yml:
    external: true
  unicorn-5-worker:
    external: true
  bbnavi-tmb-importer-master-key:
    external: true
  bbnavi-tmb-importer-production-key:
    external: true

networks:
  public:
    external: true
  datahub-tmb-database-postgres:
    external: true
